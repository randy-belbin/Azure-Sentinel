{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Microsoft - support@microsoft.com",
        "comments": "Solution template for Microsoft Defender Threat Intelligence"
    },
    "parameters": {
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection ',parameters('location'))]"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        }
    },
    "variables": {
        "solutionId": "azuresentinel.azure-sentinel-solution-microsoftdefenderthreatint",
        "_solutionId": "[variables('solutionId')]",
        "email": "support@microsoft.com",
        "_email": "[variables('email')]",
        "MDTI-Automated-Triage": "MDTI-Automated-Triage",
        "_MDTI-Automated-Triage": "[variables('MDTI-Automated-Triage')]",
        "playbookVersion1": "1.0.2",
        "playbookContentId1": "MDTI-Automated-Triage",
        "_playbookContentId1": "[variables('playbookContentId1')]",
        "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
        "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
        "MDTI-Base": "MDTI-Base",
        "_MDTI-Base": "[variables('MDTI-Base')]",
        "playbookVersion2": "1.0.2",
        "playbookContentId2": "MDTI-Base",
        "_playbookContentId2": "[variables('playbookContentId2')]",
        "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
        "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
        "MDTI-Data-WebComponents": "MDTI-Data-WebComponents",
        "_MDTI-Data-WebComponents": "[variables('MDTI-Data-WebComponents')]",
        "playbookVersion3": "1.0.2",
        "playbookContentId3": "MDTI-Data-WebComponents",
        "_playbookContentId3": "[variables('playbookContentId3')]",
        "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
        "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]",
        "MDTI-Intel-Reputation": "MDTI-Intel-Reputation",
        "_MDTI-Intel-Reputation": "[variables('MDTI-Intel-Reputation')]",
        "playbookVersion4": "1.0.2",
        "playbookContentId4": "MDTI-Intel-Reputation",
        "_playbookContentId4": "[variables('playbookContentId4')]",
        "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
        "playbookTemplateSpecName4": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('playbookTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "properties": {
                "description": "MDTI-Automated-Triage playbook",
                "displayName": "MDTI-Automated-Triage playbook"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
            ],
            "properties": {
                "description": "MDTI-Automated-Triage Playbook with template version 2.0.4",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('playbookVersion1')]",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "MDTI-Automated-Triage",
                            "type": "String"
                        }
                    },
                    "variables": {
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]",
                        "integration_account_name": "mdti-integration-account"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2019-05-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "Source": "MDTI",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
                            ],
                            "properties": {
                                "integrationAccount": {
                                    "id": "[[resourceId('Microsoft.Logic/IntegrationAccounts', variables('integration_account_name'))]"
                                },
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Entities_-_Get_DNS": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/dnsresolution"
                                            },
                                            "runAfter": {
                                                "Init_Classification_Bit": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_Hosts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/host"
                                            },
                                            "runAfter": {
                                                "Init_Classification_Bit": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_IPs": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/ip"
                                            },
                                            "runAfter": {
                                                "Init_Classification_Bit": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each_DNS": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)_3": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p>MDTI Reputation: @{items('For_each_DNS')?['DomainName']}<br>\nClassification: @{body('Get_Reputation_for_DNS')?['classification']} (@{body('Get_Reputation_for_DNS')?['score']})<br>\n@{body('Create_DNS_HTML_table')}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "runAfter": {
                                                        "Create_DNS_HTML_table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Append_DNS_classification": {
                                                    "inputs": {
                                                        "name": "classification_bit",
                                                        "value": "@body('Get_Reputation_for_DNS')?['classification']"
                                                    },
                                                    "runAfter": {
                                                        "Get_Reputation_for_DNS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable"
                                                },
                                                "Create_DNS_HTML_table": {
                                                    "inputs": {
                                                        "format": "HTML",
                                                        "from": "@variables('result_output_dns')"
                                                    },
                                                    "runAfter": {
                                                        "Set_dns_variable": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table"
                                                },
                                                "Get_Reputation_for_DNS": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "@body('MDTI-Base')?['resource']",
                                                            "clientId": "@body('MDTI-Base')?['clientId']",
                                                            "secret": "@body('MDTI-Base')?['clientSecret']",
                                                            "tenant": "@body('MDTI-Base')?['tenantId']",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "headers": {
                                                            "Content-Type": "application/json"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_DNS')?['DomainName']}')/reputation"
                                                    },
                                                    "runAfter": {},
                                                    "runtimeConfiguration": {
                                                        "secureData": {
                                                            "properties": [
                                                                "inputs"
                                                            ]
                                                        }
                                                    },
                                                    "type": "Http"
                                                },
                                                "Set_dns_variable": {
                                                    "inputs": {
                                                        "name": "result_output_dns",
                                                        "value": "@body('Get_Reputation_for_DNS')?['rules']"
                                                    },
                                                    "runAfter": {
                                                        "Append_DNS_classification": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_DNS')?['Dnsresolutions']",
                                            "runAfter": {
                                                "Init_Result_DNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_Host": {
                                            "actions": {
                                                "Has_Host_and_Domain_Segments": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>MDTI Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\nClassification: @{body('Get_Reputation_for_host')?['classification']} (@{body('Get_Reputation_for_host')?['score']})<br>\n@{body('Create_Host_HTML_table')}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Create_Host_HTML_table": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Append_host_classification": {
                                                            "inputs": {
                                                                "name": "classification_bit",
                                                                "value": "@body('Get_Reputation_for_host')?['classification']"
                                                            },
                                                            "runAfter": {
                                                                "Get_Reputation_for_host": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable"
                                                        },
                                                        "Create_Host_HTML_table": {
                                                            "inputs": {
                                                                "format": "HTML",
                                                                "from": "@variables('result_output_host')"
                                                            },
                                                            "runAfter": {
                                                                "Set_host_variable": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Table"
                                                        },
                                                        "Get_Reputation_for_host": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/reputation"
                                                            },
                                                            "runAfter": {},
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Set_host_variable": {
                                                            "inputs": {
                                                                "name": "result_output_host",
                                                                "value": "@body('Get_Reputation_for_host')?['rules']"
                                                            },
                                                            "runAfter": {
                                                                "Append_host_classification": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_each_Host')?['DnsDomain']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_each_Host')?['HostName']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                            "runAfter": {
                                                "Init_Result_Host": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_IP_Address": {
                                            "actions": {
                                                "Is_Not_Private_IP": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)_2": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>MDTI Reputation: @{items('For_each_IP_Address')?['Address']}<br>\nClassification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br>\n@{body('Create_IP_HTML_table')}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Create_IP_HTML_table": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Append_ip_classification": {
                                                            "inputs": {
                                                                "name": "classification_bit",
                                                                "value": "@body('Get_reputation')?['classification']"
                                                            },
                                                            "runAfter": {
                                                                "Get_reputation": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable"
                                                        },
                                                        "Create_IP_HTML_table": {
                                                            "inputs": {
                                                                "format": "HTML",
                                                                "from": "@variables('result_output_ip')"
                                                            },
                                                            "runAfter": {
                                                                "Set_IP_variable": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Table"
                                                        },
                                                        "Get_reputation": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/reputation"
                                                            },
                                                            "runAfter": {},
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Set_IP_variable": {
                                                            "inputs": {
                                                                "name": "result_output_ip",
                                                                "value": "@body('Get_reputation')?['rules']"
                                                            },
                                                            "runAfter": {
                                                                "Append_ip_classification": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@contains(outputs('Identify_Private_IPs')['body'],items('For_each_IP_Address')?['Address'])",
                                                                    "@false"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                                            "runAfter": {
                                                "Identify_Private_IPs": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "Identify_Private_IPs": {
                                            "inputs": {
                                                "code": "var entities = workflowContext.trigger.outputs.body.object.properties.relatedEntities\r\n;\r\nvar rfc1918 = /^(10|127|169\\.254|172\\.1[6-9]|172\\.2[0-9]|172\\.3[0-1]|192\\.168)\\./;\r\nvar privip = [];\r\n\r\nfor (var i=0;i<entities.length;i++) {\r\n    if (entities[i].kind === 'Ip' && rfc1918.test(entities[i].properties.address)) {\r\n        privip.push(entities[i].properties.address)\r\n    }\r\n}\r\n\r\nreturn privip;",
                                                "explicitDependencies": {
                                                    "includeTrigger": true
                                                }
                                            },
                                            "runAfter": {
                                                "Init_Result_IP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "JavaScriptCode"
                                        },
                                        "Init_Classification_Bit": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "classification_bit",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Init_Result_DNS": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_dns",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_DNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Init_Result_Host": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_host",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Hosts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Init_Result_IP": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_ip",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_IPs": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "MDTI-Base": {
                                            "inputs": {
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "/subscriptions/c6229d3c-9fb0-404c-9a21-22bdcc0cf547/resourceGroups/Sentinel-RG/providers/Microsoft.Logic/workflows/MDTI-Base"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "outputs"
                                                    ]
                                                }
                                            },
                                            "type": "Workflow"
                                        },
                                        "Malicious_or_Suspicious": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Update_incident": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "owner": "@triggerBody()?['object']?['properties']?['owner']?['objectId']",
                                                                    "ownerAction": "Unassign",
                                                                    "severity": "High",
                                                                    "status": "Active",
                                                                    "tagsToAdd": {
                                                                        "TagsToAdd": [
                                                                            {
                                                                                "Tag": "MDTI Malicious"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "put",
                                                                "path": "/Incidents"
                                                            },
                                                            "runAfter": {},
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Update_incident_2": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                        "owner": "@triggerBody()?['object']?['properties']?['owner']?['objectId']",
                                                                        "ownerAction": "Unassign",
                                                                        "severity": "Medium",
                                                                        "status": "Active",
                                                                        "tagsToAdd": {
                                                                            "TagsToAdd": [
                                                                                {
                                                                                    "Tag": "MDTI Suspicious"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "put",
                                                                    "path": "/Incidents"
                                                                },
                                                                "runAfter": {},
                                                                "type": "ApiConnection"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@variables('classification_bit')",
                                                                    "malicious"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "contains": [
                                                            "@variables('classification_bit')",
                                                            "malicious"
                                                        ]
                                                    },
                                                    {
                                                        "contains": [
                                                            "@variables('classification_bit')",
                                                            "suspicious"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "For_each_DNS": [
                                                    "Succeeded"
                                                ],
                                                "For_each_Host": [
                                                    "Succeeded"
                                                ],
                                                "For_each_IP_Address": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "outputs": {}
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
                            "properties": {
                                "parentId": "[variables('playbookId1')]",
                                "contentId": "[variables('_playbookContentId1')]",
                                "kind": "Playbook",
                                "version": "[variables('playbookVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender Threat Intelligence",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "comments": "Perform automated triage actions on the Microsoft Sentinels Incident based on MDTI Reputation data.",
                        "title": "MDTI-Automated-Triage",
                        "description": "This playbook uses the MDTI Reputation data to automatically enrich incidents generated by Microsoft Sentinel. Indicators from an incident will be evaluated with MDTI reputation data. If any indicators are labeled as 'suspicious', the incident will be tagged as such and its severity will be marked as 'medium'. If any indicators are labeled as 'malicious', the incident will be tagged as such and its severity will be marked as 'high'. Regardless of the reputation state, comments will be added to the incident outlining the reputation details with links to further information if applicable.",
                        "prerequisites": [
                            "This playbook inherits API connections created and established within a base playbook. Ensure you have deployed [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) prior to deploying this playbook. If you have trouble accessing your account or your credentials contact your account representative or (mdtidiscussion[@]microsoft.com)."
                        ],
                        "lastUpdateTime": "2023-03-09T00:00:00Z",
                        "postDeployment": [
                            "After deploying the playbook, you must authorize the connections leveraged.",
                            "1. Visit the playbook resource.",
                            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
                            "3. Ensure each connection has been authorized.",
                            "**Note: If you've deployed the [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) playbook, you will only need to authorize the Microsoft Sentinel connection.**"
                        ],
                        "releaseNotes": [
                            {
                                "version": "[variables('playbookVersion1')]",
                                "title": "MDTI Automated Triage",
                                "notes": [
                                    "Initial version",
                                    "Updated version with Secure Inputs for HTTP REST and Secure Output for MDTI-Base actions",
                                    "Updated version with free-tier Integration Accountto enable Inline Javascript action to check for non-Public IPs; Add DNS Entities to playbook lookups"
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('playbookTemplateSpecName2')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "properties": {
                "description": "MDTI-Base playbook",
                "displayName": "MDTI-Base playbook"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
            ],
            "properties": {
                "description": "MDTI-Base Playbook with template version 2.0.4",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('playbookVersion2')]",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "MDTI-Base",
                            "type": "String"
                        },
                        "Client-Id": {
                            "defaultValue": "Client-ID",
                            "type": "String"
                        },
                        "Client-Secret": {
                            "defaultValue": "Client-Secret",
                            "type": "SecureString"
                        },
                        "MDTI-Resource": {
                            "defaultValue": "https://graph.microsoft.com",
                            "type": "String"
                        },
                        "MDTI-BaseUrl": {
                            "defaultValue": "graph.microsoft.com",
                            "type": "String"
                        },
                        "Api-Version": {
                            "defaultValue": "beta",
                            "type": "String"
                        },
                        "Key-Vault-Name": {
                            "defaultValue": "[[concat('kv-mdti-', uniqueString(parameters('Client-Id'), utcNow()))]",
                            "type": "string"
                        },
                        "Key-Vault-Sku": {
                            "defaultValue": "standard",
                            "type": "string",
                            "metadata": {
                                "description": "Key Vault SKU name"
                            },
                            "allowedValues": [
                                "premium",
                                "standard"
                            ]
                        },
                        "Key-Vault-Secret-Name": {
                            "defaultValue": "mdti-api",
                            "type": "string",
                            "metadata": {
                                "description": "The name for the Client-Secret in the Key Vault"
                            }
                        },
                        "User-Object-Id": {
                            "defaultValue": "00000000-0000-0000-0000-000000000000",
                            "type": "string",
                            "metadata": {
                                "description": "Object ID, aka Principal ID, of the User to assign Key Vault Administrator role. If not changed from the default, then a role must be assigned manually the Key Vault Access Control (IAM) in order to view Key Vault contents. Open a new Cloud Shell and run either \"(Get-AzADUser -mail '_insert_email_here_').Id\" or \"az ad user list --filter \"mail eq '_insert_email_here_'\" --query [].id -o tsv\""
                            }
                        }
                    },
                    "variables": {
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]",
                        "connections_keyvault_name": "[[format('keyvault-{0}', parameters('PlaybookName'))]",
                        "integration_account_name": "mdti-integration-account",
                        "integration_pricing_sku": "free"
                    },
                    "resources": [
                        {
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('integration_account_name')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "type": "Microsoft.Logic/IntegrationAccounts",
                            "tags": {
                                "Source": "MDTI"
                            },
                            "sku": {
                                "name": "[[variables('integration_pricing_sku')]"
                            },
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults",
                            "apiVersion": "2022-07-01",
                            "name": "[[parameters('Key-Vault-Name')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "sku": {
                                    "family": "A",
                                    "name": "[[parameters('Key-Vault-Sku')]"
                                },
                                "tenantId": "[subscription().tenantId]",
                                "enabledForDeployment": false,
                                "enabledForDiskEncryption": false,
                                "enabledForTemplateDeployment": false,
                                "enableRbacAuthorization": true,
                                "networkAcls": {
                                    "defaultAction": "Allow",
                                    "bypass": "AzureServices"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "apiVersion": "2021-10-01",
                            "name": "[[format('{0}/{1}', parameters('Key-Vault-Name'), parameters('Key-Vault-Secret-Name'))]",
                            "properties": {
                                "value": "[[parameters('Client-Secret')]"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-10-01-preview",
                            "scope": "[[format('Microsoft.KeyVault/vaults/{0}', parameters('Key-Vault-Name'))]",
                            "name": "[[guid('4633458b-17de-408a-b874-0445c86b69e6', resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name')))]",
                            "properties": {
                                "principalId": "[[reference(resourceId('Microsoft.Logic/workflows', parameters('PlaybookName')), '2019-05-01', 'full').identity.principalId]",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                                "principalType": "ServicePrincipal"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]",
                                "[[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-10-01-preview",
                            "scope": "[[format('Microsoft.KeyVault/vaults/{0}', parameters('Key-Vault-Name'))]",
                            "name": "[[guid('00482a5a-887f-4fb3-b363-3b7fe8e74483', resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name')))]",
                            "properties": {
                                "principalId": "[[parameters('User-Object-Id')]",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                                "principalType": "User"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2018-07-01-preview",
                            "name": "[[variables('connections_keyvault_name')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "keyvault-MDTI-Base",
                                "api": {
                                    "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'), 'keyvault')]"
                                },
                                "parameterValueType": "Alternative",
                                "alternativeParameterValues": {
                                    "vaultName": "[[parameters('Key-Vault-Name')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2019-05-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "tags": {
                                "Source": "MDTI",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "defaultValue": {},
                                            "type": "Object"
                                        },
                                        "Client-Id": {
                                            "defaultValue": "[[parameters('Client-Id')]",
                                            "type": "String"
                                        },
                                        "MDTI-Resource": {
                                            "defaultValue": "[[parameters('MDTI-Resource')]",
                                            "type": "String"
                                        },
                                        "MDTI-BaseUrl": {
                                            "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                                            "type": "String"
                                        },
                                        "Api-Version": {
                                            "defaultValue": "[[parameters('Api-Version')]",
                                            "type": "String"
                                        },
                                        "ResourceGroupName": {
                                            "defaultValue": "[[resourceGroup().name]",
                                            "type": "String"
                                        },
                                        "Subscription-Id": {
                                            "defaultValue": "[[subscription().subscriptionId]",
                                            "type": "String"
                                        },
                                        "Tenant-Id": {
                                            "defaultValue": "[[subscription().tenantId]",
                                            "type": "String"
                                        }
                                    },
                                    "triggers": {
                                        "manual": {
                                            "type": "Request",
                                            "kind": "Http"
                                        }
                                    },
                                    "actions": {
                                        "Response": {
                                            "runAfter": {
                                                "Get_Client_Secret": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs"
                                                    ]
                                                }
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "body": {
                                                    "clientId": "@parameters('Client-Id')",
                                                    "clientSecret": "@body('Get_Client_Secret')?['value']",
                                                    "resource": "@{parameters('MDTI-Resource')}",
                                                    "tenantId": "@parameters('Tenant-Id')",
                                                    "MDTI-BaseUrl": "@{parameters('MDTI-BaseUrl')}",
                                                    "Api-Version": "@parameters('Api-Version')"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "schema": {
                                                    "properties": {
                                                        "clientId": {
                                                            "type": "string"
                                                        },
                                                        "clientSecret": {
                                                            "type": "string"
                                                        },
                                                        "resource": {
                                                            "type": "string"
                                                        },
                                                        "tenantId": {
                                                            "type": "string"
                                                        },
                                                        "MDTI-BaseUrl": {
                                                            "type": "string"
                                                        },
                                                        "Api-Version": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "statusCode": 200
                                            }
                                        },
                                        "Get_Client_Secret": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "[[format('/secrets/@{{encodeURIComponent(''{0}'')}}/value', parameters('Key-Vault-Secret-Name'))]"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "keyvault": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('connections_keyvault_name'))]",
                                                "connectionName": "keyvault-MDTI-Base",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                },
                                                "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'), 'keyvault')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('connections_keyvault_name'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
                            "properties": {
                                "parentId": "[variables('playbookId2')]",
                                "contentId": "[variables('_playbookContentId2')]",
                                "kind": "Playbook",
                                "version": "[variables('playbookVersion2')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender Threat Intelligence",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "comments": "Establish the needed base resources to leverage with all MDTI playbooks.",
                        "title": "MDTI-Base",
                        "description": "This playbook creates a shared API Connection for all MDTI playbooks to leverage. This eases the configuration process for a user during deployment of the Microsoft Defender Threat Intelligence(MDTI) solution. In time, this base playbook may be extended to set more functionality. Azure AD App Registration credentials(ClientId/ClientSecret/TenantId) with MDTI API Permissions are needed when configuring this playbook. Those can be found on your [Azure Client App](https://learn.microsoft.com/en-us/rest/api/azure/#register-your-client-application-with-azure-ad) page. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com).",
                        "prerequisites": [
                            "None"
                        ],
                        "lastUpdateTime": "2023-04-01T00:00:00Z",
                        "postDeployment": [
                            "After deploying the playbook, you must authorize the connections leveraged.",
                            "1. Visit the playbook resource.",
                            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
                            "3. Ensure each connection has been authorized."
                        ],
                        "releaseNotes": [
                            {
                                "version": "[variables('playbookVersion2')]",
                                "title": "MDTI Base",
                                "notes": [
                                    "Updated version with Key Vault to hold secret",
                                    "Updated version with free-tier Integration Accountto enable Inline Javascript action to check for non-Public IPs; Add DNS Entities to playbook lookups"
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('playbookTemplateSpecName3')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "properties": {
                "description": "MDTI-Data-WebComponents playbook",
                "displayName": "MDTI-Data-WebComponents playbook"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
            ],
            "properties": {
                "description": "MDTI-Data-WebComponents Playbook with template version 2.0.4",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('playbookVersion3')]",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "MDTI-Data-WebComponents",
                            "type": "String"
                        }
                    },
                    "variables": {
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]",
                        "integration_account_name": "mdti-integration-account"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2019-05-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "Source": "MDTI",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
                            ],
                            "properties": {
                                "integrationAccount": {
                                    "id": "[[resourceId('Microsoft.Logic/IntegrationAccounts', variables('integration_account_name'))]"
                                },
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Entities_-_Get_DNS": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/dnsresolution"
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_Hosts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/host"
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_IPs": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/ip"
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each_DNS": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)_3": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p>MDTI Web Components for Indicator: @{items('For_each_DNS')?['DomainName']}<br>\n@{body('Create_DNS_HTML_table')}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "runAfter": {
                                                        "Create_DNS_HTML_table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Create_DNS_HTML_table": {
                                                    "inputs": {
                                                        "format": "HTML",
                                                        "from": "@variables('result_output_dns')"
                                                    },
                                                    "runAfter": {
                                                        "For_each_DNS_comonent": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table"
                                                },
                                                "For_each_DNS_comonent": {
                                                    "actions": {
                                                        "Append_to_Result_DNS": {
                                                            "inputs": {
                                                                "name": "result_output_dns",
                                                                "value": {
                                                                    "Category": "@items('For_each_DNS_comonent')['category']",
                                                                    "LastSeenDateTime": "@items('For_each_DNS_comonent')['lastSeenDateTime']",
                                                                    "Name": "@items('For_each_DNS_comonent')['name']",
                                                                    "Version": "@items('For_each_DNS_comonent')['version']"
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "type": "AppendToArrayVariable"
                                                        }
                                                    },
                                                    "foreach": "@body('Parse_DNS_components')",
                                                    "runAfter": {
                                                        "Set_Result_DNS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Get_components_for_DNS": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "@body('MDTI-Base')?['resource']",
                                                            "clientId": "@body('MDTI-Base')?['clientId']",
                                                            "secret": "@body('MDTI-Base')?['clientSecret']",
                                                            "tenant": "@body('MDTI-Base')?['tenantId']",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "headers": {
                                                            "Content-Type": "application/json"
                                                        },
                                                        "method": "GET",
                                                        "queries": {
                                                            "$count": "true",
                                                            "$top": "25"
                                                        },
                                                        "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_DNS')?['DomainName']}')/components"
                                                    },
                                                    "runAfter": {},
                                                    "runtimeConfiguration": {
                                                        "secureData": {
                                                            "properties": [
                                                                "inputs"
                                                            ]
                                                        }
                                                    },
                                                    "type": "Http"
                                                },
                                                "Parse_DNS_components": {
                                                    "inputs": {
                                                        "content": "@body('Get_components_for_DNS')?['value']",
                                                        "schema": {
                                                            "items": {
                                                                "properties": {
                                                                    "category": {
                                                                        "type": "string"
                                                                    },
                                                                    "firstSeenDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "host": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastSeenDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "version": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "firstSeenDateTime",
                                                                    "lastSeenDateTime",
                                                                    "name",
                                                                    "version",
                                                                    "category",
                                                                    "host"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_components_for_DNS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson"
                                                },
                                                "Set_Result_DNS": {
                                                    "inputs": {
                                                        "name": "result_output_dns",
                                                        "value": []
                                                    },
                                                    "runAfter": {
                                                        "Parse_DNS_components": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_DNS')?['Dnsresolutions']",
                                            "runAfter": {
                                                "Initialize_Result_DNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_Host": {
                                            "actions": {
                                                "Has_Host_and_Domain_Segments": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>MDTI Web Components for Indicator : @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\n@{body('Create_Host_HTML_table')}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Create_Host_HTML_table": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Create_Host_HTML_table": {
                                                            "inputs": {
                                                                "format": "HTML",
                                                                "from": "@variables('result_output_host')"
                                                            },
                                                            "runAfter": {
                                                                "For_each_host_component": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Table"
                                                        },
                                                        "For_each_host_component": {
                                                            "actions": {
                                                                "Append_to_Result_Host": {
                                                                    "inputs": {
                                                                        "name": "result_output_host",
                                                                        "value": {
                                                                            "Category": "@items('For_each_host_component')['category']",
                                                                            "LastSeenDateTime": "@items('For_each_host_component')['lastSeenDateTime']",
                                                                            "Name": "@items('For_each_host_component')['name']",
                                                                            "Version": "@items('For_each_host_component')['version']"
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable"
                                                                }
                                                            },
                                                            "foreach": "@body('Parse_host_components')",
                                                            "runAfter": {
                                                                "Set_Result_Host": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Foreach"
                                                        },
                                                        "Get_components_for_host": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "queries": {
                                                                    "$count": "true",
                                                                    "$top": "25"
                                                                },
                                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/components"
                                                            },
                                                            "runAfter": {},
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Parse_host_components": {
                                                            "inputs": {
                                                                "content": "@body('Get_components_for_host')?['value']",
                                                                "schema": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "category": {
                                                                                "type": "string"
                                                                            },
                                                                            "firstSeenDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "host": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastSeenDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "version": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "id",
                                                                            "firstSeenDateTime",
                                                                            "lastSeenDateTime",
                                                                            "name",
                                                                            "version",
                                                                            "category",
                                                                            "host"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_components_for_host": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ParseJson"
                                                        },
                                                        "Set_Result_Host": {
                                                            "inputs": {
                                                                "name": "result_output_host",
                                                                "value": []
                                                            },
                                                            "runAfter": {
                                                                "Parse_host_components": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_each_Host')?['HostName']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_each_Host')?['DnsDomain']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                            "runAfter": {
                                                "Init_Result_Host": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_IP_Address": {
                                            "actions": {
                                                "Is_Not_Private_IP": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)_2": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>MDTI Web Components for Indicator: @{items('For_each_IP_Address')?['Address']}<br>\n@{body('Create_IP_HTML_table')}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Create_IP_HTML_table": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Create_IP_HTML_table": {
                                                            "inputs": {
                                                                "format": "HTML",
                                                                "from": "@variables('result_output_ip')"
                                                            },
                                                            "runAfter": {
                                                                "For_each_component": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Table"
                                                        },
                                                        "For_each_component": {
                                                            "actions": {
                                                                "Append_to_Result_IP": {
                                                                    "inputs": {
                                                                        "name": "result_output_ip",
                                                                        "value": {
                                                                            "Category": "@items('For_each_component')?['category']",
                                                                            "LastSeenDateTime": "@items('For_each_component')?['lastSeenDateTime']",
                                                                            "Name": "@items('For_each_component')?['name']",
                                                                            "Version": "@items('For_each_component')?['version']"
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable"
                                                                }
                                                            },
                                                            "foreach": "@body('Parse_components')",
                                                            "runAfter": {
                                                                "Set_Result_IP": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Foreach"
                                                        },
                                                        "Get_components": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "queries": {
                                                                    "$count": "true",
                                                                    "$top": "25"
                                                                },
                                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/components"
                                                            },
                                                            "runAfter": {},
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Parse_components": {
                                                            "inputs": {
                                                                "content": "@body('Get_components')?['value']",
                                                                "schema": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "category": {
                                                                                "type": "string"
                                                                            },
                                                                            "firstSeenDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "host": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastSeenDateTime": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "version": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "id",
                                                                            "firstSeenDateTime",
                                                                            "lastSeenDateTime",
                                                                            "name",
                                                                            "version",
                                                                            "category",
                                                                            "host"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_components": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ParseJson"
                                                        },
                                                        "Set_Result_IP": {
                                                            "inputs": {
                                                                "name": "result_output_ip",
                                                                "value": []
                                                            },
                                                            "runAfter": {
                                                                "Parse_components": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@contains(outputs('Identify_Private_IPs')['body'],items('For_each_IP_Address')?['Address'])",
                                                                    "@false"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                                            "runAfter": {
                                                "Identify_Private_IPs": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "Identify_Private_IPs": {
                                            "inputs": {
                                                "code": "var entities = workflowContext.trigger.outputs.body.object.properties.relatedEntities\r\n;\r\nvar rfc1918 = /^(10|127|169\\.254|172\\.1[6-9]|172\\.2[0-9]|172\\.3[0-1]|192\\.168)\\./;\r\nvar privip = [];\r\n\r\nfor (var i=0;i<entities.length;i++) {\r\n    if (entities[i].kind === 'Ip' && rfc1918.test(entities[i].properties.address)) {\r\n        privip.push(entities[i].properties.address)\r\n    }\r\n}\r\n\r\nreturn privip;",
                                                "explicitDependencies": {
                                                    "includeTrigger": true
                                                }
                                            },
                                            "runAfter": {
                                                "Init_Result_IP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "JavaScriptCode"
                                        },
                                        "Init_Result_Host": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_host",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Hosts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Init_Result_IP": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_ip",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_IPs": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Initialize_Result_DNS": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_dns",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_DNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "MDTI-Base": {
                                            "inputs": {
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "/subscriptions/c6229d3c-9fb0-404c-9a21-22bdcc0cf547/resourceGroups/Sentinel-RG/providers/Microsoft.Logic/workflows/MDTI-Base"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "outputs"
                                                    ]
                                                }
                                            },
                                            "type": "Workflow"
                                        }
                                    },
                                    "outputs": {}
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
                            "properties": {
                                "parentId": "[variables('playbookId3')]",
                                "contentId": "[variables('_playbookContentId3')]",
                                "kind": "Playbook",
                                "version": "[variables('playbookVersion3')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender Threat Intelligence",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Internet data.",
                        "title": "MDTI-Data-WebComponents",
                        "description": "This playbook uses the MDTI Components data to automatically enrich incidents generated by Microsoft Sentinel. Leverage this playbook in order to enrich your incidents with [Webcomponents](https://learn.microsoft.com/en-us/defender/threat-intelligence/data-sets#components) data hosted by the indicators found within the incident. These components allow a user to understand the makeup of a webpage or the technology and services driving a specific piece of infrastructure. Pivoting on unique components can find actors' infrastructure or other sites that are compromised. Users can also understand if a website might be vulnerable to a specific attack or compromise based on the technologies that it is running.",
                        "prerequisites": [
                            "This playbook inherits API connections created and established within a base playbook. Ensure you have deployed [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) prior to deploying this playbook. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)."
                        ],
                        "lastUpdateTime": "2023-03-09T00:00:00Z",
                        "postDeployment": [
                            "After deploying the playbook, you must authorize the connections leveraged.",
                            "1. Visit the playbook resource.",
                            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
                            "3. Ensure each connection has been authorized.",
                            "**Note: If you've deployed the [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) playbook, you will only need to authorize the Microsoft Sentinel connection.**"
                        ],
                        "releaseNotes": [
                            {
                                "version": "[variables('playbookVersion3')]",
                                "title": "MDTI Data WebComponents",
                                "notes": [
                                    "Updated version with Secure Inputs for HTTP REST and Secure Output for MDTI-Base actions",
                                    "Updated version with free-tier Integration Accountto enable Inline Javascript action to check for non-Public IPs; Add DNS Entities to playbook lookups"
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2021-05-01",
            "name": "[variables('playbookTemplateSpecName4')]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "properties": {
                "description": "MDTI-Intel-Reputation playbook",
                "displayName": "MDTI-Intel-Reputation playbook"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2021-05-01",
            "name": "[concat(variables('playbookTemplateSpecName4'),'/',variables('playbookVersion4'))]",
            "location": "[parameters('workspace-location')]",
            "tags": {
                "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
                "hidden-sentinelContentType": "Playbook"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName4'))]"
            ],
            "properties": {
                "description": "MDTI-Intel-Reputation Playbook with template version 2.0.4",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('playbookVersion4')]",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "MDTI-Intel-Reputation",
                            "type": "String"
                        }
                    },
                    "variables": {
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]",
                        "integration_account_name": "mdti-integration-account"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2019-05-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "Source": "MDTI",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
                            ],
                            "properties": {
                                "integrationAccount": {
                                    "id": "[[resourceId('Microsoft.Logic/IntegrationAccounts', variables('integration_account_name'))]"
                                },
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Entities_-_Get_DNS": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/dnsresolution"
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_Hosts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/host"
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_IPs": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/ip"
                                            },
                                            "runAfter": {
                                                "MDTI-Base": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each_DNS": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)_3": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p>MDTI Reputation: @{items('For_each_DNS')?['DomainName']}<br>\nClassification: @{body('Get_reputation_for_DNS')?['classification']} (@{body('Get_reputation_for_DNS')?['score']})<br>\n@{body('Create_DNS_HTML_table')}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "runAfter": {
                                                        "Create_DNS_HTML_table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Create_DNS_HTML_table": {
                                                    "inputs": {
                                                        "format": "HTML",
                                                        "from": "@variables('result_output_dns')"
                                                    },
                                                    "runAfter": {
                                                        "Set_Result_DNS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Table"
                                                },
                                                "Get_reputation_for_DNS": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "@body('MDTI-Base')?['resource']",
                                                            "clientId": "@body('MDTI-Base')?['clientId']",
                                                            "secret": "@body('MDTI-Base')?['clientSecret']",
                                                            "tenant": "@body('MDTI-Base')?['tenantId']",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "headers": {
                                                            "Content-Type": "application/json"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_DNS')?['DomainName']}')/reputation"
                                                    },
                                                    "runAfter": {},
                                                    "runtimeConfiguration": {
                                                        "secureData": {
                                                            "properties": [
                                                                "inputs"
                                                            ]
                                                        }
                                                    },
                                                    "type": "Http"
                                                },
                                                "Set_Result_DNS": {
                                                    "inputs": {
                                                        "name": "result_output_dns",
                                                        "value": "@body('Get_reputation_for_DNS')?['rules']"
                                                    },
                                                    "runAfter": {
                                                        "Get_reputation_for_DNS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_DNS')?['Dnsresolutions']",
                                            "runAfter": {
                                                "Initialize_Result_DNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_Host": {
                                            "actions": {
                                                "Has_Host_and_Domain_Segments": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>MDTI Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\nClassification: @{body('Get_reputation_for_host')?['classification']} (@{body('Get_reputation_for_host')?['score']})<br>\n@{body('Create_Host_HTML_table')}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Create_Host_HTML_table": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Create_Host_HTML_table": {
                                                            "inputs": {
                                                                "format": "HTML",
                                                                "from": "@variables('result_output_host')"
                                                            },
                                                            "runAfter": {
                                                                "Set_Result_Host": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Table"
                                                        },
                                                        "Get_reputation_for_host": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/reputation"
                                                            },
                                                            "runAfter": {},
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Set_Result_Host": {
                                                            "inputs": {
                                                                "name": "result_output_host",
                                                                "value": "@body('Get_reputation_for_host')?['rules']"
                                                            },
                                                            "runAfter": {
                                                                "Get_reputation_for_host": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_each_Host')?['HostName']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_each_Host')?['DnsDomain']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                            "runAfter": {
                                                "Init_Result_Host": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_IP_Address": {
                                            "actions": {
                                                "Is_Not_Private_IP": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)_2": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>MDTI Reputation: @{items('For_each_IP_Address')?['Address']}<br>\nClassification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br>\n@{body('Create_IP_HTML_table')}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Create_IP_HTML_table": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Create_IP_HTML_table": {
                                                            "inputs": {
                                                                "format": "HTML",
                                                                "from": "@variables('result_output_ip')"
                                                            },
                                                            "runAfter": {
                                                                "Set_Result_IP": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Table"
                                                        },
                                                        "Get_reputation": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/reputation"
                                                            },
                                                            "runAfter": {},
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Set_Result_IP": {
                                                            "inputs": {
                                                                "name": "result_output_ip",
                                                                "value": "@body('Get_reputation')?['rules']"
                                                            },
                                                            "runAfter": {
                                                                "Get_reputation": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@contains(outputs('Identify_Private_IPs')['body'],items('For_each_IP_Address')?['Address'])",
                                                                    "@false"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                                            "runAfter": {
                                                "Identify_Private_IPs": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            },
                                            "type": "Foreach"
                                        },
                                        "Identify_Private_IPs": {
                                            "inputs": {
                                                "code": "var entities = workflowContext.trigger.outputs.body.object.properties.relatedEntities\r\n;\r\nvar rfc1918 = /^(10|127|169\\.254|172\\.1[6-9]|172\\.2[0-9]|172\\.3[0-1]|192\\.168)\\./;\r\nvar privip = [];\r\n\r\nfor (var i=0;i<entities.length;i++) {\r\n    if (entities[i].kind === 'Ip' && rfc1918.test(entities[i].properties.address)) {\r\n        privip.push(entities[i].properties.address)\r\n    }\r\n}\r\n\r\nreturn privip;",
                                                "explicitDependencies": {
                                                    "includeTrigger": true
                                                }
                                            },
                                            "runAfter": {
                                                "Init_Result_IP": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "JavaScriptCode"
                                        },
                                        "Init_Result_Host": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_host",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Hosts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Init_Result_IP": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_ip",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_IPs": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "Initialize_Result_DNS": {
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "result_output_dns",
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_DNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable"
                                        },
                                        "MDTI-Base": {
                                            "inputs": {
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "/subscriptions/c6229d3c-9fb0-404c-9a21-22bdcc0cf547/resourceGroups/Sentinel-RG/providers/Microsoft.Logic/workflows/MDTI-Base"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "outputs"
                                                    ]
                                                }
                                            },
                                            "type": "Workflow"
                                        }
                                    },
                                    "outputs": {}
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
                            "properties": {
                                "parentId": "[variables('playbookId4')]",
                                "contentId": "[variables('_playbookContentId4')]",
                                "kind": "Playbook",
                                "version": "[variables('playbookVersion4')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Defender Threat Intelligence",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "[variables('_email')]"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Reputation data.",
                        "title": "MDTI-Intel-Reputation",
                        "description": "This playbook uses the MDTI API to automatically enrich incidents generated by Microsoft Sentinel. Reputation information provides analyst with a decision as to whether an indicator is considered benign, suspicious or malicious. Analysts can leverage this playbook in order to enrich indicators found within an incident. Each reputation result is contained within a comment and will include detailed scoring information noting why a given indicator is considered suspicious or malicious with links back to the MDTI platform for more information.",
                        "prerequisites": [
                            "This playbook inherits API connections created and established within a base playbook. Ensure you have deployed [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) prior to deploying this playbook. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)."
                        ],
                        "lastUpdateTime": "2023-03-09T00:00:00Z",
                        "postDeployment": [
                            "After deploying the playbook, you must authorize the connections leveraged.",
                            "1. Visit the playbook resource.",
                            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
                            "3. Ensure each connection has been authorized.",
                            "**Note: If you've deployed the [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) playbook, you will only need to authorize the Microsoft Sentinel connection.**"
                        ],
                        "releaseNotes": [
                            {
                                "version": "[variables('playbookVersion4')]",
                                "title": "MDTI Intel Reputation",
                                "notes": [
                                    "Updated version with Secure Inputs for HTTP REST and Secure Output for MDTI-Base actions",
                                    "Updated version with free-tier Integration Accountto enable Inline Javascript action to check for non-Public IPs; Add DNS Entities to playbook lookups"
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "version": "2.0.4",
                "kind": "Solution",
                "contentSchemaVersion": "2.0.0",
                "contentId": "[variables('_solutionId')]",
                "parentId": "[variables('_solutionId')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Defender Threat Intelligence",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "[variables('_email')]"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "kind": "Playbook",
                            "contentId": "[variables('_MDTI-Automated-Triage')]",
                            "version": "[variables('playbookVersion1')]"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "[variables('_MDTI-Base')]",
                            "version": "[variables('playbookVersion2')]"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "[variables('_MDTI-Data-WebComponents')]",
                            "version": "[variables('playbookVersion3')]"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "[variables('_MDTI-Intel-Reputation')]",
                            "version": "[variables('playbookVersion4')]"
                        }
                    ]
                },
                "firstPublishDate": "2023-03-23",
                "providers": [
                    "Microsoft"
                ],
                "categories": {
                    "domains": [
                        "Security - Threat Intelligence",
                        "Security - Automation (SOAR)"
                    ]
                }
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
        }
    ],
    "outputs": {}
}
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "Establish the needed base resources to leverage with all MDTI playbooks.",
        "title": "MDTI-Base",
        "description": "This playbook creates a shared API Connection for all MDTI playbooks to leverage. This eases the configuration process for a user during deployment of the Microsoft Defender Threat Intelligence(MDTI) solution. In time, this base playbook may be extended to set more functionality. Azure AD App Registration credentials(ClientId/ClientSecret/TenantId) with MDTI API Permissions are needed when configuring this playbook. Those can be found on your [Azure Client App](https://learn.microsoft.com/en-us/rest/api/azure/#register-your-client-application-with-azure-ad) page. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com).",
        "prerequisites": [
            "None"
        ],
        "lastUpdateTime": "2023-03-09T00:00:00.000Z",
        "entities": [],
        "tags": [],
        "postDeployment": [
            "After deploying the playbook, you must authorize the connections leveraged.",
            "1. Visit the playbook resource.",
            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
            "3. Ensure each connection has been authorized."
        ],
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "Ajay Kallur, Microsoft"
        },
        "releaseNotes": [
            {
                "version": "1.0.1",
                "title": "MDTI Base",
                "notes": [
                    "Updated version with Key Vault to hold secret"
                ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "MDTI-Base",
            "type": "String"
        },
        "Client-Id": {
            "type": "String"
        },
        "Client-Secret": {
            "type": "securestring"
        },
        "MDTI-Resource": {
            "defaultValue": "https://graph.microsoft.com",
            "type": "String"
        },
        "MDTI-BaseUrl": {
            "defaultValue": "graph.microsoft.com",
            "type": "String"
        },
        "Api-Version": {
            "defaultValue": "beta",
            "type": "String"
        },
        "Key-Vault-Name": {
            "defaultValue": "[concat('kv-mdti-', uniqueString(parameters('Client-Id'), utcNow()))]",
            "type": "string"
        },
        "Key-Vault-Sku": {
            "defaultValue": "standard",
            "type": "string",
            "metadata": {
                "description": "Key Vault SKU name"
            },
            "allowedValues": [
                "premium",
                "standard"
            ]
        },
        "Key-Vault-Secret-Name": {
            "defaultValue": "mdti-api",
            "type": "string",
            "metadata": {
                "description": "The name for the Service Principal Client Secret in the Key Vault"
            }
        },
        "User-Object-Id": {
            "defaultValue": "00000000-0000-0000-0000-000000000000",
            "type": "string",
            "metadata": {
                "description": "Object ID, aka Principal ID, of the User to assign Key Vault Administrator role. If left unchanged, then a role must be assigned manually the Key Vault Access Control (IAM) in order to view Key Vault contents"
            }
        }
    },
    "variables": {
        "connections_keyvault_name": "[format('keyvault-{0}', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "name": "[parameters('Key-Vault-Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "[parameters('Key-Vault-Sku')]"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableRbacAuthorization": true,
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-10-01",
            "name": "[format('{0}/{1}', parameters('Key-Vault-Name'), parameters('Key-Vault-Secret-Name'))]",
            "properties": {
                "value": "[parameters('Client-Secret')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('Key-Vault-Name'))]",
            "name": "[guid('4633458b-17de-408a-b874-0445c86b69e6', resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name')))]",
            "properties": {
                "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('PlaybookName')), '2017-07-01', 'full').identity.principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('Key-Vault-Name'))]",
            "name": "[guid('00482a5a-887f-4fb3-b363-3b7fe8e74483', resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name')))]",
            "properties": {
                "principalId": "[parameters('User-Object-Id')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                "principalType": "User"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('connections_keyvault_name')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "keyvault",
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'keyvault')]"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('Key-Vault-Name')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "Source": "MDTI"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "Client-Id": {
                            "defaultValue": "[parameters('Client-Id')]",
                            "type": "String"
                        },
                        "MDTI-Resource": {
                            "defaultValue": "[parameters('MDTI-Resource')]",
                            "type": "String"
                        },
                        "MDTI-BaseUrl": {
                            "defaultValue": "[parameters('MDTI-BaseUrl')]",
                            "type": "String"
                        },
                        "Api-Version": {
                            "defaultValue": "[parameters('Api-Version')]",
                            "type": "String"
                        },
                        "ResourceGroupName": {
                            "defaultValue": "[resourceGroup().name]",
                            "type": "String"
                        },
                        "Subscription-Id": {
                            "defaultValue": "[subscription().subscriptionId]",
                            "type": "String"
                        },
                        "Tenant-Id": {
                            "defaultValue": "[subscription().tenantId]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http"
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "Get_Client_Secret": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "clientId": "@parameters('Client-Id')",
                                    "clientSecret": "@body('Get_Client_Secret')?['value']",
                                    "resource": "@{parameters('MDTI-Resource')}",
                                    "tenantId": "@parameters('Tenant-Id')",
                                    "MDTI-BaseUrl": "@{parameters('MDTI-BaseUrl')}",
                                    "Api-Version": "@parameters('Api-Version')"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "schema": {
                                    "properties": {
                                        "clientId": {
                                            "type": "string"
                                        },
                                        "clientSecret": {
                                            "type": "string"
                                        },
                                        "resource": {
                                            "type": "string"
                                        },
                                        "tenantId": {
                                            "type": "string"
                                        },
                                        "MDTI-BaseUrl": {
                                            "type": "string"
                                        },
                                        "Api-Version": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 200
                            }
                        },
                        "Get_Client_Secret": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[format('/secrets/@{{encodeURIComponent(''{0}'')}}/value', parameters('Key-Vault-Secret-Name'))]"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_keyvault_name'))]",
                                "connectionName": "keyvault-MDTI-Base",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'keyvault')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_keyvault_name'))]"
            ]
        }
    ]
}